// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Item in *Global Nav → Menu Items*
 */
export interface GlobalNavDocumentDataMenuItemsItem {
  /**
   * Menu Link field in *Global Nav → Menu Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[].menu_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  menu_link: prismic.LinkField;

  /**
   * Menu Label field in *Global Nav → Menu Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[].menu_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  menu_label: prismic.KeyTextField;
}

/**
 * Content for Global Nav documents
 */
interface GlobalNavDocumentData {
  /**
   * Company Name field in *Global Nav*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.company_name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  company_name: prismic.RichTextField;

  /**
   * Menu Items field in *Global Nav*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_items[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  menu_items: prismic.GroupField<Simplify<GlobalNavDocumentDataMenuItemsItem>>;
}

/**
 * Global Nav document from Prismic
 *
 * - **API ID**: `global_nav`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type GlobalNavDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<GlobalNavDocumentData>,
    "global_nav",
    Lang
  >;

type HomepageDocumentDataSlicesSlice = SplitImageTextSlice | TextsliceSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

type MarketingPageDocumentDataSlicesSlice =
  | EmbedSectionSlice
  | SplitImageTextSlice
  | TextsliceSlice;

/**
 * Content for Marketing Page documents
 */
interface MarketingPageDocumentData {
  /**
   * Slice Zone field in *Marketing Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: marketing_page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<MarketingPageDocumentDataSlicesSlice> /**
   * Meta Title field in *Marketing Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: marketing_page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Marketing Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: marketing_page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Marketing Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: marketing_page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Marketing Page document from Prismic
 *
 * - **API ID**: `marketing_page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MarketingPageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<MarketingPageDocumentData>,
    "marketing_page",
    Lang
  >;

export type AllDocumentTypes =
  | GlobalNavDocument
  | HomepageDocument
  | MarketingPageDocument;

/**
 * Primary content in *EmbedSection → Default → Primary*
 */
export interface EmbedSectionSliceDefaultPrimary {
  /**
   * Background Color field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Grey" | "Green">;

  /**
   * Text field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Embed field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.embed
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  embed: prismic.EmbedField;
}

/**
 * Default variation for EmbedSection Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSectionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<EmbedSectionSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *EmbedSection*
 */
type EmbedSectionSliceVariation = EmbedSectionSliceDefault;

/**
 * EmbedSection Shared Slice
 *
 * - **API ID**: `embed_section`
 * - **Description**: EmbedSection
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSectionSlice = prismic.SharedSlice<
  "embed_section",
  EmbedSectionSliceVariation
>;

/**
 * Primary content in *SplitImageText → Default → Primary*
 */
export interface SplitImageTextSliceDefaultPrimary {
  /**
   * text field in *SplitImageText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * image field in *SplitImageText → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Default variation for SplitImageText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SplitImageTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Split Image Right → Primary*
 */
export interface SplitImageTextSliceSplitImageRightPrimary {
  /**
   * text field in *SplitImageText → Split Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageRight.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * image field in *SplitImageText → Split Image Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Split Image Right variation for SplitImageText Slice
 *
 * - **API ID**: `splitImageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitImageRight = prismic.SharedSliceVariation<
  "splitImageRight",
  Simplify<SplitImageTextSliceSplitImageRightPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Split Button Left → Primary*
 */
export interface SplitImageTextSliceSplitButtonLeftPrimary {
  /**
   * text field in *SplitImageText → Split Button Left → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonLeft.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * image field in *SplitImageText → Split Button Left → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonLeft.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Split Button Left → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonLeft.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Split Button Left → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonLeft.primary.buttonlabel
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  buttonlabel: prismic.RichTextField;
}

/**
 * Split Button Left variation for SplitImageText Slice
 *
 * - **API ID**: `splitButtonLeft`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitButtonLeft = prismic.SharedSliceVariation<
  "splitButtonLeft",
  Simplify<SplitImageTextSliceSplitButtonLeftPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Split Button Right → Primary*
 */
export interface SplitImageTextSliceSplitButtonRightPrimary {
  /**
   * text field in *SplitImageText → Split Button Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonRight.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * image field in *SplitImageText → Split Button Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonRight.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Split Button Right → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonRight.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Split Button Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitButtonRight.primary.buttonlabel
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  buttonlabel: prismic.RichTextField;
}

/**
 * Split Button Right variation for SplitImageText Slice
 *
 * - **API ID**: `splitButtonRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitButtonRight = prismic.SharedSliceVariation<
  "splitButtonRight",
  Simplify<SplitImageTextSliceSplitButtonRightPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Hero Section → Primary*
 */
export interface SplitImageTextSliceHeroSectionPrimary {
  /**
   * Title field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Paragraph field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  paragraph: prismic.RichTextField;

  /**
   * image field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.buttonlabel
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  buttonlabel: prismic.RichTextField;

  /**
   * Background Color field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Grey" | "Green">;
}

/**
 * Hero Section variation for SplitImageText Slice
 *
 * - **API ID**: `heroSection`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceHeroSection = prismic.SharedSliceVariation<
  "heroSection",
  Simplify<SplitImageTextSliceHeroSectionPrimary>,
  never
>;

/**
 * Slice variation for *SplitImageText*
 */
type SplitImageTextSliceVariation =
  | SplitImageTextSliceDefault
  | SplitImageTextSliceSplitImageRight
  | SplitImageTextSliceSplitButtonLeft
  | SplitImageTextSliceSplitButtonRight
  | SplitImageTextSliceHeroSection;

/**
 * SplitImageText Shared Slice
 *
 * - **API ID**: `split_image_text`
 * - **Description**: SplitImageText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSlice = prismic.SharedSlice<
  "split_image_text",
  SplitImageTextSliceVariation
>;

/**
 * Primary content in *Textslice → Default → Primary*
 */
export interface TextsliceSliceDefaultPrimary {
  /**
   * Title field in *Textslice → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Text field field in *Textslice → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.default.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;
}

/**
 * Default variation for Textslice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextsliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextsliceSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Textslice → Call to Action Button → Primary*
 */
export interface TextsliceSliceCallToActionButtonPrimary {
  /**
   * Title field in *Textslice → Call to Action Button → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.callToActionButton.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Text field field in *Textslice → Call to Action Button → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.callToActionButton.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;

  /**
   * Button Link field in *Textslice → Call to Action Button → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.callToActionButton.primary.buttonlink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonlink: prismic.LinkField;

  /**
   * Button Label field in *Textslice → Call to Action Button → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: textslice.callToActionButton.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Call to Action Button variation for Textslice Slice
 *
 * - **API ID**: `callToActionButton`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextsliceSliceCallToActionButton = prismic.SharedSliceVariation<
  "callToActionButton",
  Simplify<TextsliceSliceCallToActionButtonPrimary>,
  never
>;

/**
 * Slice variation for *Textslice*
 */
type TextsliceSliceVariation =
  | TextsliceSliceDefault
  | TextsliceSliceCallToActionButton;

/**
 * Textslice Shared Slice
 *
 * - **API ID**: `textslice`
 * - **Description**: Textslice
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextsliceSlice = prismic.SharedSlice<
  "textslice",
  TextsliceSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      GlobalNavDocument,
      GlobalNavDocumentData,
      GlobalNavDocumentDataMenuItemsItem,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      MarketingPageDocument,
      MarketingPageDocumentData,
      MarketingPageDocumentDataSlicesSlice,
      AllDocumentTypes,
      EmbedSectionSlice,
      EmbedSectionSliceDefaultPrimary,
      EmbedSectionSliceVariation,
      EmbedSectionSliceDefault,
      SplitImageTextSlice,
      SplitImageTextSliceDefaultPrimary,
      SplitImageTextSliceSplitImageRightPrimary,
      SplitImageTextSliceSplitButtonLeftPrimary,
      SplitImageTextSliceSplitButtonRightPrimary,
      SplitImageTextSliceHeroSectionPrimary,
      SplitImageTextSliceVariation,
      SplitImageTextSliceDefault,
      SplitImageTextSliceSplitImageRight,
      SplitImageTextSliceSplitButtonLeft,
      SplitImageTextSliceSplitButtonRight,
      SplitImageTextSliceHeroSection,
      TextsliceSlice,
      TextsliceSliceDefaultPrimary,
      TextsliceSliceCallToActionButtonPrimary,
      TextsliceSliceVariation,
      TextsliceSliceDefault,
      TextsliceSliceCallToActionButton,
    };
  }
}
